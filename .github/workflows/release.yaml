name: release

# release process:
#
# on main branch merge:
# 1. Calculate next semantic version tag (autotag)
# 2. invoke goreleaser to build binaries, docker images, and generate GH release with new version tag

on:
  push:
    branches:
      - main
    paths:
      - go.mod
      - go.sum
      - '**.go'
      - .goreleaser.yml
      - Dockerfile
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push' && !contains(toJson(github.event.commits), '[ci skip]') && !contains(toJson(github.event.commits), '[skip ci]'))
      || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - run: make lint
      - run: make test

  release:
    runs-on: ubuntu-latest
    needs: [test]

    permissions:
      contents: write
      packages: write

    steps:
      - name: checkout code with full history (unshallow)
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5
        with:
          go-version-file: go.mod

      - name: install autotag binary
        run: |
          curl -sL https://git.io/autotag-install | sh -s -- -b "${RUNNER_TEMP}/bin"

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 # v6
        with:
          install-only: true

      - name: login to ghcr.io
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: do release
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}